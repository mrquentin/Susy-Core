buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/maven'}
        maven { url = 'https://maven.minecraftforge.net/' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'

version = mod_version
group = maven_group
archivesBaseName = archives_base_name

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg '-torg.spongepowered.asm.launch.MixinTweaker'
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg '-torg.spongepowered.asm.launch.MixinTweaker'
        }
    }
}

repositories {
    maven { url = 'https://maven.cleanroommc.com' }
    maven { url = 'https://repo.spongepowered.org/maven' }
    maven { url = "https://www.cursemaven.com" }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2859'
    implementation 'org.jetbrains:annotations:20.1.0'

    implementation fg.deobf('com.cleanroommc:assetmover:0.2')
    implementation fg.deobf('zone.rong:mixinbooter:5.0')

    implementation fg.deobf('curse.maven:codechicken-lib-1-8-242818:2779848')
    implementation fg.deobf('curse.maven:gregtech-ce-unofficial-557242:4483462')
    implementation fg.deobf('curse.maven:gregicality-multiblocks-564858:4480254')
    implementation fg.deobf('curse.maven:geckolib-388172:4020277')
    implementation fg.deobf('curse.maven:jei-238222:3043174')
    implementation fg.deobf('curse.maven:the-one-probe-245211:2667280')
    implementation fg.deobf('curse.maven:realistic-terrain-generation-unofficial-648514:4404814')
    implementation fg.deobf('curse.maven:biomes-o-plenty-220318:2842510')
    implementation fg.deobf('curse.maven:gregtech-food-option-477021:4496053')
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version
    inputs.property 'mcversion', minecraft_version
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        // replace version and mcversion
        expand 'version': project.version, 'mcversion': minecraft_version
    }
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    if (use_access_transformer.toBoolean()) {
        rename '(.+_at.cfg)', 'META-INF/$1' // Access Transformers
    }
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        def attribute_map = [:]
        if (use_coremod.toBoolean()) {
            attribute_map['FMLCorePlugin'] = coremod_plugin_class_name
            if (include_mod.toBoolean()) {
                attribute_map['FMLCorePluginContainsFMLMod'] = true
                attribute_map['ForceLoadAsMod'] = project.gradle.startParameter.taskNames[0] == "build"
            }
        }
        if (use_mixins.toBoolean()) {
            attribute_map['TweakClass'] = 'org.spongepowered.asm.launch.MixinTweaker'
        }
        if (use_access_transformer.toBoolean()) {
            attribute_map['FMLAT'] = archives_base_name + '_at.cfg'
        }
        attributes(attribute_map)
    }
}

//jar.finalizedBy('reobfJar')

